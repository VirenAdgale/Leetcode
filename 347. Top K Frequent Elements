class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        
        HashMap<Integer,Integer> freq=new HashMap<>();

        for(int num:nums)
        {
            freq.put(num,freq.getOrDefault(num,0)+1);
        }
        PriorityQueue<Integer> heap=new PriorityQueue<>(
            (a,b)->freq.get(a)-freq.get(b)
        );

        for(int s:freq.keySet())
        {
            heap.add(s);
            if(heap.size()>k)
            {
                heap.poll();
            }
        }
        int[] result=new int[k];
        int index=0;
        while(!heap.isEmpty())
        {
            result[index++]=heap.poll();
        }
        return result;
    }
}
